import { Directive, ElementRef, HostListener, Input } from "@angular/core";
import Swal from "sweetalert2";

@Directive({
  selector: "input[orderQuantity]"
})
export class OrderQuantityDirective {
  constructor(private el: ElementRef) {}

  @Input("orderQuantity") initalValue: number;

  @HostListener("input", ["$event"]) onInputChange(event) {
    const initalValue = this.el.nativeElement.value;
    // console.log(initalValue);
    //^[1-9][0-9]*
    if (initalValue == 0) {
      this.el.nativeElement.value = "";
    } else {
      this.el.nativeElement.value = initalValue.replace(/[^0-9]*/g, "");
      if (initalValue !== this.el.nativeElement.value) {
        event.stopPropagation();
      }
    }
  }

  @HostListener("focusout", ["$event"]) onfocusout(event) {
    const initalValue = this.el.nativeElement.value;
    if (initalValue == "") {
      this.el.nativeElement.value = 1;
      Swal({
        text: "Minimum quantity should be 1",
        // showCancelButton: true,
        showConfirmButton: true
      });
    } else if (initalValue > 99) {
      this.el.nativeElement.value = 99;
      Swal({
        text: "Maximum quantity should be less than 100",
        // showCancelButton: true,
        showConfirmButton: true
      });
    }
  }
}
